---
import BaseHead from "../components/BaseHead.astro";
import MainHeader from "../components/MainHeader.astro";
import SimpleFooter from "../components/SimpleFooter.astro";

export interface Props {
	content: {
		title: string;
		description: string;
		pubDate: string;
		enableMath?: boolean;
		ogImage?: { url: string; width?: number; height?: number }[]
		tags?: string[]
	};
}

const {
	content: { title, description, pubDate, enableMath, ogImage, tags },
} = Astro.props as Props;

const publishDate = pubDate ?? Astro.url.pathname.split('/').slice(2, 5).join('/')
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<html lang="en">

<head>
	<BaseHead title={title} description={description} enableMath={enableMath} canonical={canonicalURL} ogType="article" />
	<meta property="og:title" content={title} />
	<meta property="og:description" content={description} />
	<meta property="og:url" content={canonicalURL} />
	<meta property="og:site_name" content="Coder Spirit" />
	{ogImage && ogImage.map(img => (
		<>
		<meta property="og:image" content={img.url} />
		{img.width && <meta property="og:image:width" content={`${img.width}`} />}
		{img.height && <meta property="og:image:height" content={`${img.height}`} />}
		</>
	))}
	<link rel="webmention" href="https://webmention.io/blog.coderspirit.xyz_about_/webmention" />
	<link rel="pingback" href="https://webmention.io/blog.coderspirit.xyz_about_/xmlrpc" />
</head>

<body>
	<MainHeader />
	<div class="wrapper">
		<main>
			<article class="h-entry">
				<h1 class="section-title p-name">{title}</h1>
				<time class="dt-published" datetime={publishDate}>{publishDate}</time>
				{tags && <nav class="article-tags"><ul>
					{tags.map(tag => <li><a class="tag" rel="tag" href={`/tags/${tag}/`}>{tag}</a></li>)}
				</ul></nav>}
				<div class="article-content e-content"><slot /></div>
			</article>
		</main>
	</div>
	<!--Use wrapper... -->
	<SimpleFooter />
</body>

</html>
